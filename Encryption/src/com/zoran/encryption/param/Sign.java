package com.zoran.encryption.param;

/**
 *
 * refer:
 * https://www.cnblogs.com/PerkinsZhu/p/9713836.html
 *
 * sign:请求参数的签名
 * 解决问题:避免请求参数被恶意修改。保证了请求数据的一致性。
 * 使用场景:客户端和服务端约定一个签名生成算法。客户端在请求接口之前调用签名算法，根据参数生成sign值。然后把sign和请求参数一并传给服务器。
 * 服务器收到到参数和签名之后，根据请求参数，调用签名算法计算出签名，然后比较该签名和客户端传过来的签名是否一致，如果一致，
 * 则说明请求参数未被修改过，如果不一致，则说明请求参数被修改过。
 *
 * sign作用：
 * 验证乘客端向服务器请求的参数是否被篡改
 */
public class Sign {
}
